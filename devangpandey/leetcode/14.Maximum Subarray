Leetcode link: https://leetcode.com/problems/maximum-subarray/

I have used Kadane's algorithm.

class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        
        int max_number = 0;
        max_number=*max_element(nums.begin(),nums.end());
        int max_sum = 0;
        int temp_sum=0;
        for(int i=0 ; i<nums.size();i++)
        {
            temp_sum+= nums[i];
            if(temp_sum<0)
                temp_sum=0;
            if(temp_sum>max_sum)
                max_sum=temp_sum;
        }
        if(max_sum!=0)
        return max_sum>max_number?max_sum:max_number;
        else return max_number;
    }
};